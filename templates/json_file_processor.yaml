AWSTemplateFormatVersion: 2010-09-09

Transform: AWS::Serverless-2016-10-31

Description: CFN template to create architecture represented at URL.

Resources:
  ProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      Runtime: python3.7
      CodeUri: ../src/jsonprocessor/
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/jumo-dai-lambda-role

  InputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: json-file-processor-files
      NotificationConfiguration:
        TopicConfigurations:
          - Event: s3:ObjectCreated:*
            Topic: !Ref InputNotificationTopic
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: input/
    DependsOn: NotificationPolicy

  InputNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !GetAtt ProcessorFunction.Arn
          Protocol: lambda

  NotificationPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: PushBucketNotificationPolicy
        Version: 2012-10-17
        Statement:
          - Sid: AllowBucketToPushNotificationEffect
            Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sns:Publish
            Resource: !Ref InputNotificationTopic
            Condition:
              ArnLike:
                aws:SourceArn: arn:aws:s3:*:*:json-file-processor-files
      Topics:
        - !Ref InputNotificationTopic

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt ProcessorFunction.Arn
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref InputNotificationTopic

  OutputQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 108000
      VisibilityTimeout: 300

  QueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Id: SendMessagesQueuePolicy
        Version: 2012-10-17
        Statement:
          - Sid: AllowUserSendMessage
            Effect: Allow
            Principal: "*"
            Action:
              - SQS:GetQueueAttributes
              - SQS:GetQueueUrl
              - SQS:SendMessage
            Resource: !GetAtt OutputQueue.Arn
      Queues:
        - !Ref OutputQueue

Outputs:
  Bucket:
    Description: Storage location for data which is to be processed by Lambda functions.
    Value: !Ref InputBucket

  Topic:
    Description: SNS Topic to publish S3 Event notification to Lambda function.
    Value: !Ref InputNotificationTopic

  ProcessorFunction:
    Description: Lambda function receiving SNS messages of S3 events.
    Value: !Ref ProcessorFunction

  Queue:
    Description: SQS Queue to which Lambda function will send messages to.
    Value: !Ref OutputQueue
